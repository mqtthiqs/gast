# -*- Makefile -*-
BTARGET  = $(TARGET).byte
OTARGET  = $(TARGET).native
BLTARGET = $(TARGET).cma
BNTARGET = $(TARGET).cmxa
STARGET  = $(OTARGET)

#########################
## Tools configuration ##
#########################

# Menhir can be told to produce a parser that explains what
# it is doing. 
ifeq ($(DEBUGPARSING), yes)
  MENHIROPT=-yaccflag --explain -yaccflag --trace -yaccflag --dump
else
  MENHIROPT=-yaccflag --explain 
endif

OCAMLBUILD_DEF = ocamlbuild -cflags "-dtypes","-warn-error","A" -tag debug -no-hygiene $(MENHIROPT)

# In Emacs, use classic display to enable error jumping.
TERM = $(shell echo $$TERM)
ifeq ($(TERM), dumb)
 OCAMLBUILD = $(OCAMLBUILD_DEF) -classic-display
else
 OCAMLBUILD = $(OCAMLBUILD_DEF)
endif

OCAMLDOC = ocamldoc
HEADACHE = headache

#########
# Rules #
#########

.PHONY: all-generic byte opt doc clean dist \
	install uninstall headers clear all check check-clean

all : all-generic check
all-generic: clear $(STARGET) $(TARGET)

$(TARGET): $(STARGET)
	ln -s $(STARGET) $(TARGET)

clear:
	@rm -f $(STARGET)

opt: $(OTARGET)

byte: $(BTARGET)

%:
	@ $(OCAMLBUILD) $@

byte-debug:
	$(OCAMLBUILD) -tag debug $(BTARGET)

ifeq ($(strip $(PREFIX)),)
install uninstall:
	@echo "Cannot (un)install $(EXECUTABLE): the PREFIX variable is undefined." && false
else
install: $(EXECUTABLE)
	mkdir -p $(PREFIX)/bin/
	install $(STARGET) $(PREFIX)/bin/$(TARGET)
uninstall:
	/bin/rm -f $(PREFIX)/bin/$(TARGET)
endif

#######################
# Administrative part #
#######################

headers:
	for i in *.ml *.mli *.mly; do \
	   $(HEADACHE) -h admin/header -c admin/headache.cfg $$i; \
        done

clean: check-clean
	@ $(OCAMLBUILD) -clean
	find -name '*~' -exec rm '{}' \;
	rm -fr *~ $(TARGET) $(PACKAGE) $(PACKAGE).tar.gz; \

doc: byte
	$(OCAMLBUILD) $(TARGET).docdir/index.html
	mkdir -p doc/html
	mv $(TARGET).docdir/* doc/html
	rm $(TARGET).docdir

dist:
	rm -fr $(PACKAGE)
	mkdir $(PACKAGE)
	for i in `cat distributed_files | grep -v '#'` doc/html/*.html; do	\
	  if test -f $$i; then					\
            cp -fr --parents $$i $(PACKAGE);			\
          else							\
	    mkdir -p $$i;					\
          fi;					                \
        done
	tar cvfz $(PACKAGE).tar.gz $(PACKAGE)
